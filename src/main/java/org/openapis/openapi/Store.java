/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package org.openapis.openapi;

import static org.openapis.openapi.operations.Operations.RequestlessOperation;
import static org.openapis.openapi.operations.Operations.RequestOperation;

import jakarta.annotation.Nullable;
import java.lang.Exception;
import org.openapis.openapi.models.components.Order;
import org.openapis.openapi.models.operations.DeleteOrderRequest;
import org.openapis.openapi.models.operations.DeleteOrderRequestBuilder;
import org.openapis.openapi.models.operations.DeleteOrderResponse;
import org.openapis.openapi.models.operations.GetInventoryRequestBuilder;
import org.openapis.openapi.models.operations.GetInventoryResponse;
import org.openapis.openapi.models.operations.GetOrderByIdRequest;
import org.openapis.openapi.models.operations.GetOrderByIdRequestBuilder;
import org.openapis.openapi.models.operations.GetOrderByIdResponse;
import org.openapis.openapi.models.operations.PlaceOrderRequestBuilder;
import org.openapis.openapi.models.operations.PlaceOrderResponse;
import org.openapis.openapi.operations.DeleteOrder;
import org.openapis.openapi.operations.GetInventory;
import org.openapis.openapi.operations.GetOrderById;
import org.openapis.openapi.operations.PlaceOrder;

/**
 * Access to Petstore orders
 * 
 * <p>http://swagger.io - Find out more about our store
 */
public class Store {
    private final SDKConfiguration sdkConfiguration;

    Store(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * Returns pet inventories by status
     * 
     * <p>Returns a map of status codes to quantities
     * 
     * @return The call builder
     */
    public GetInventoryRequestBuilder getInventory() {
        return new GetInventoryRequestBuilder(sdkConfiguration);
    }

    /**
     * Returns pet inventories by status
     * 
     * <p>Returns a map of status codes to quantities
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetInventoryResponse getInventoryDirect() throws Exception {
        RequestlessOperation<GetInventoryResponse> operation
            = new GetInventory.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest());
    }

    /**
     * Place an order for a pet
     * 
     * <p>Place a new order in the store
     * 
     * @return The call builder
     */
    public PlaceOrderRequestBuilder placeOrder() {
        return new PlaceOrderRequestBuilder(sdkConfiguration);
    }

    /**
     * Place an order for a pet
     * 
     * <p>Place a new order in the store
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PlaceOrderResponse placeOrderDirect() throws Exception {
        return placeOrder(null);
    }

    /**
     * Place an order for a pet
     * 
     * <p>Place a new order in the store
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PlaceOrderResponse placeOrder(@Nullable Order request) throws Exception {
        RequestOperation<Order, PlaceOrderResponse> operation
              = new PlaceOrder.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Find purchase order by ID
     * 
     * <p>For valid response try integer IDs with value &lt;= 5 or &gt; 10. Other values will generate exceptions.
     * 
     * @return The call builder
     */
    public GetOrderByIdRequestBuilder getOrderById() {
        return new GetOrderByIdRequestBuilder(sdkConfiguration);
    }

    /**
     * Find purchase order by ID
     * 
     * <p>For valid response try integer IDs with value &lt;= 5 or &gt; 10. Other values will generate exceptions.
     * 
     * @param orderId ID of order that needs to be fetched
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetOrderByIdResponse getOrderById(long orderId) throws Exception {
        GetOrderByIdRequest request = new GetOrderByIdRequest(orderId);
        RequestOperation<GetOrderByIdRequest, GetOrderByIdResponse> operation
              = new GetOrderById.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Delete purchase order by ID
     * 
     * <p>For valid response try integer IDs with value &lt; 1000. Anything above 1000 or nonintegers will generate API errors
     * 
     * @return The call builder
     */
    public DeleteOrderRequestBuilder deleteOrder() {
        return new DeleteOrderRequestBuilder(sdkConfiguration);
    }

    /**
     * Delete purchase order by ID
     * 
     * <p>For valid response try integer IDs with value &lt; 1000. Anything above 1000 or nonintegers will generate API errors
     * 
     * @param orderId ID of the order that needs to be deleted
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public DeleteOrderResponse deleteOrder(long orderId) throws Exception {
        DeleteOrderRequest request = new DeleteOrderRequest(orderId);
        RequestOperation<DeleteOrderRequest, DeleteOrderResponse> operation
              = new DeleteOrder.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

}
