/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package org.openapis.openapi.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nullable;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Override;
import java.lang.String;
import java.time.OffsetDateTime;
import java.util.Optional;
import org.openapis.openapi.utils.Utils;


public class Order {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    private Long id;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("petId")
    private Long petId;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("quantity")
    private Integer quantity;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shipDate")
    private OffsetDateTime shipDate;

    /**
     * Order Status
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    private OrderStatus status;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("complete")
    private Boolean complete;

    @JsonCreator
    public Order(
            @JsonProperty("id") @Nullable Long id,
            @JsonProperty("petId") @Nullable Long petId,
            @JsonProperty("quantity") @Nullable Integer quantity,
            @JsonProperty("shipDate") @Nullable OffsetDateTime shipDate,
            @JsonProperty("status") @Nullable OrderStatus status,
            @JsonProperty("complete") @Nullable Boolean complete) {
        this.id = id;
        this.petId = petId;
        this.quantity = quantity;
        this.shipDate = shipDate;
        this.status = status;
        this.complete = complete;
    }
    
    public Order() {
        this(null, null, null,
            null, null, null);
    }

    public Optional<Long> id() {
        return Optional.ofNullable(this.id);
    }

    public Optional<Long> petId() {
        return Optional.ofNullable(this.petId);
    }

    public Optional<Integer> quantity() {
        return Optional.ofNullable(this.quantity);
    }

    public Optional<OffsetDateTime> shipDate() {
        return Optional.ofNullable(this.shipDate);
    }

    /**
     * Order Status
     */
    public Optional<OrderStatus> status() {
        return Optional.ofNullable(this.status);
    }

    public Optional<Boolean> complete() {
        return Optional.ofNullable(this.complete);
    }

    public static Builder builder() {
        return new Builder();
    }


    public Order withId(@Nullable Long id) {
        this.id = id;
        return this;
    }


    public Order withPetId(@Nullable Long petId) {
        this.petId = petId;
        return this;
    }


    public Order withQuantity(@Nullable Integer quantity) {
        this.quantity = quantity;
        return this;
    }


    public Order withShipDate(@Nullable OffsetDateTime shipDate) {
        this.shipDate = shipDate;
        return this;
    }


    /**
     * Order Status
     */
    public Order withStatus(@Nullable OrderStatus status) {
        this.status = status;
        return this;
    }


    public Order withComplete(@Nullable Boolean complete) {
        this.complete = complete;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Order other = (Order) o;
        return 
            Utils.enhancedDeepEquals(this.id, other.id) &&
            Utils.enhancedDeepEquals(this.petId, other.petId) &&
            Utils.enhancedDeepEquals(this.quantity, other.quantity) &&
            Utils.enhancedDeepEquals(this.shipDate, other.shipDate) &&
            Utils.enhancedDeepEquals(this.status, other.status) &&
            Utils.enhancedDeepEquals(this.complete, other.complete);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            id, petId, quantity,
            shipDate, status, complete);
    }
    
    @Override
    public String toString() {
        return Utils.toString(Order.class,
                "id", id,
                "petId", petId,
                "quantity", quantity,
                "shipDate", shipDate,
                "status", status,
                "complete", complete);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private Long id;

        private Long petId;

        private Integer quantity;

        private OffsetDateTime shipDate;

        private OrderStatus status;

        private Boolean complete;

        private Builder() {
          // force use of static builder() method
        }

        public Builder id(@Nullable Long id) {
            this.id = id;
            return this;
        }

        public Builder petId(@Nullable Long petId) {
            this.petId = petId;
            return this;
        }

        public Builder quantity(@Nullable Integer quantity) {
            this.quantity = quantity;
            return this;
        }

        public Builder shipDate(@Nullable OffsetDateTime shipDate) {
            this.shipDate = shipDate;
            return this;
        }

        /**
         * Order Status
         */
        public Builder status(@Nullable OrderStatus status) {
            this.status = status;
            return this;
        }

        public Builder complete(@Nullable Boolean complete) {
            this.complete = complete;
            return this;
        }

        public Order build() {
            return new Order(
                id, petId, quantity,
                shipDate, status, complete);
        }

    }
}
