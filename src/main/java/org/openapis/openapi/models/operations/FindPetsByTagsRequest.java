/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import jakarta.annotation.Nullable;
import java.lang.Override;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import org.openapis.openapi.utils.SpeakeasyMetadata;
import org.openapis.openapi.utils.Utils;


public class FindPetsByTagsRequest {
    /**
     * Tags to filter by
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=tags")
    private List<String> tags;

    @JsonCreator
    public FindPetsByTagsRequest(
            @Nullable List<String> tags) {
        this.tags = tags;
    }
    
    public FindPetsByTagsRequest() {
        this(null);
    }

    /**
     * Tags to filter by
     */
    public Optional<List<String>> tags() {
        return Optional.ofNullable(this.tags);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Tags to filter by
     */
    public FindPetsByTagsRequest withTags(@Nullable List<String> tags) {
        this.tags = tags;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        FindPetsByTagsRequest other = (FindPetsByTagsRequest) o;
        return 
            Utils.enhancedDeepEquals(this.tags, other.tags);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            tags);
    }
    
    @Override
    public String toString() {
        return Utils.toString(FindPetsByTagsRequest.class,
                "tags", tags);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private List<String> tags;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * Tags to filter by
         */
        public Builder tags(@Nullable List<String> tags) {
            this.tags = tags;
            return this;
        }

        public FindPetsByTagsRequest build() {
            return new FindPetsByTagsRequest(
                tags);
        }

    }
}
